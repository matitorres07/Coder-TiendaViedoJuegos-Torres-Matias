{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Mati/Desktop/REACT/tiendavideojuegos-torres/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Mati/Desktop/REACT/tiendavideojuegos-torres/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var CartContext=/*#__PURE__*/createContext();export var useCartContext=function useCartContext(){return useContext(CartContext);};var CartContextProvider=function CartContextProvider(_ref){var children=_ref.children;// Logica\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),cart=_useState2[0],setCart=_useState2[1];// Validar si está el item en el carrito\nvar isInCart=function isInCart(id){return cart.find(function(producto){return producto.id===id;});};// Agregar item al carrito\nvar addToCart=function addToCart(producto,cantidad){var newCart=_toConsumableArray(cart);var productoIsInCart=isInCart(producto.id);if(productoIsInCart){newCart[newCart.findIndex(function(prod){return prod.id===productoIsInCart.id;})].quantity+=cantidad;setCart(newCart);return;}producto.quantity=cantidad;setCart([].concat(_toConsumableArray(newCart),[producto]));};var deleteFromCart=function deleteFromCart(id){var newCart=_toConsumableArray(cart);var productIsInCart=isInCart(id);if(!productIsInCart){return;}var deleteProduct=newCart.filter(function(prod){return prod.id!==id;});setCart(deleteProduct);};var deleteCart=function deleteCart(){return setCart([]);};var prueba=function prueba(){console.log(\"probando si exporto ok\");};console.log(cart);return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cart:cart,addToCart:addToCart,deleteFromCart:deleteFromCart,deleteCart:deleteCart,setCart:setCart,prueba:prueba},children:children});};export default CartContextProvider;","map":{"version":3,"sources":["C:/Users/Mati/Desktop/REACT/tiendavideojuegos-torres/src/components/context/CartContext.jsx"],"names":["React","createContext","useContext","useState","CartContext","useCartContext","CartContextProvider","children","cart","setCart","isInCart","id","find","producto","addToCart","cantidad","newCart","productoIsInCart","findIndex","prod","quantity","deleteFromCart","productIsInCart","deleteProduct","filter","deleteCart","prueba","console","log"],"mappings":"4RAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGH,aAAa,EAAjC,CAEA,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMH,CAAAA,UAAU,CAACE,WAAD,CAAhB,EAAvB,CAEP,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC7C;AACA,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,EAAD,QAAQH,CAAAA,IAAI,CAACI,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACF,EAAT,GAAgBA,EAA9B,EAAV,CAAR,EAAjB,CAEA;AACA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACD,QAAD,CAAWE,QAAX,CAAwB,CACzC,GAAMC,CAAAA,OAAO,oBAAOR,IAAP,CAAb,CAEA,GAAMS,CAAAA,gBAAgB,CAAGP,QAAQ,CAACG,QAAQ,CAACF,EAAV,CAAjC,CAEA,GAAIM,gBAAJ,CAAsB,CACrBD,OAAO,CACNA,OAAO,CAACE,SAAR,CAAkB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACR,EAAL,GAAYM,gBAAgB,CAACN,EAAvC,EAAlB,CADM,CAAP,CAEES,QAFF,EAEcL,QAFd,CAIAN,OAAO,CAACO,OAAD,CAAP,CACA,OACA,CAEDH,QAAQ,CAACO,QAAT,CAAoBL,QAApB,CACAN,OAAO,8BAAKO,OAAL,GAAcH,QAAd,GAAP,CACA,CAhBD,CAkBA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACV,EAAD,CAAQ,CAC9B,GAAMK,CAAAA,OAAO,oBAAOR,IAAP,CAAb,CAEA,GAAMc,CAAAA,eAAe,CAAGZ,QAAQ,CAACC,EAAD,CAAhC,CAEA,GAAI,CAACW,eAAL,CAAsB,CACrB,OACA,CAED,GAAMC,CAAAA,aAAa,CAAGP,OAAO,CAACQ,MAAR,CAAe,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACR,EAAL,GAAYA,EAAtB,EAAf,CAAtB,CAEAF,OAAO,CAACc,aAAD,CAAP,CACA,CAZD,CAcA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMhB,CAAAA,OAAO,CAAC,EAAD,CAAb,EAAnB,CAEA,GAAMiB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACpBC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACA,CAFD,CAIAD,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EAEA,mBACC,KAAC,WAAD,CAAa,QAAb,EACC,KAAK,CAAE,CACNA,IAAI,CAAJA,IADM,CAENM,SAAS,CAATA,SAFM,CAGNO,cAAc,CAAdA,cAHM,CAINI,UAAU,CAAVA,UAJM,CAKNhB,OAAO,CAAPA,OALM,CAMNiB,MAAM,CAANA,MANM,CADR,UAUEnB,QAVF,EADD,CAcA,CA9DD,CAgEA,cAAeD,CAAAA,mBAAf","sourcesContent":["import React, { createContext, useContext, useState } from \"react\"\r\n\r\nconst CartContext = createContext()\r\n\r\nexport const useCartContext = () => useContext(CartContext)\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n\t// Logica\r\n\tconst [cart, setCart] = useState([])\r\n\r\n\t// Validar si está el item en el carrito\r\n\tconst isInCart = (id) => cart.find((producto) => producto.id === id)\r\n\r\n\t// Agregar item al carrito\r\n\tconst addToCart = (producto, cantidad) => {\r\n\t\tconst newCart = [...cart]\r\n\r\n\t\tconst productoIsInCart = isInCart(producto.id)\r\n\r\n\t\tif (productoIsInCart) {\r\n\t\t\tnewCart[\r\n\t\t\t\tnewCart.findIndex((prod) => prod.id === productoIsInCart.id)\r\n\t\t\t].quantity += cantidad\r\n\r\n\t\t\tsetCart(newCart)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tproducto.quantity = cantidad\r\n\t\tsetCart([...newCart, producto])\r\n\t}\r\n\r\n\tconst deleteFromCart = (id) => {\r\n\t\tconst newCart = [...cart]\r\n\r\n\t\tconst productIsInCart = isInCart(id)\r\n\r\n\t\tif (!productIsInCart) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst deleteProduct = newCart.filter((prod) => prod.id !== id)\r\n\r\n\t\tsetCart(deleteProduct)\r\n\t}\r\n\r\n\tconst deleteCart = () => setCart([])\r\n\r\n\tconst prueba = () => {\r\n\t\tconsole.log(\"probando si exporto ok\");\r\n\t}\r\n\r\n\tconsole.log(cart)\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcart,\r\n\t\t\t\taddToCart,\r\n\t\t\t\tdeleteFromCart,\r\n\t\t\t\tdeleteCart,\r\n\t\t\t\tsetCart,\r\n\t\t\t\tprueba\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</CartContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default CartContextProvider"]},"metadata":{},"sourceType":"module"}